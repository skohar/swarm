machine:
  python:
    version: 2.7.10
  environment:
    PATH: "${HOME}/bin:${PATH}"
    REGION: us-east-1
    SUBNET_ID: subnet-ee4c93d3
    SECURITY_GROUP_ID: sg-ce6bb7a8
    KEY_NAME: code-check-whale
    COUNT: 2
    INSTANCE_TYPE: t2.medium
    DEV_COUNT: 1
    DEV_INSTANCE_TYPE: t2.small
    PACKER_LOG: 1
checkout:
  post:
    - git submodule sync
    - git submodule update --init
dependencies:
  cache_directories:
    - ~/bin
  pre:
    - mkdir -p ~/bin
    - ./install_softwares.sh
test:
  override:
    - source ami_name.sh && packer validate -var "AMI_NAME=$(name)" packer.json
    - TF_LOG='TRACE' DATE=$(date -u +%Y%m%dT%H%M%SZ) LOAD_BALANCER="whale-dev" MIN_SIZE=1 DESIRED_CAPACITY=1 MAX_SIZE=1 INSTANCE_TYPE="t2.micro" AMI_ID="foobar" terraform plan -var "launch_configuration_name=$DATE" -var "auto_scaling_group_name=$DATE" -var "load_balancers=$LOAD_BALANCER" -var "instance_type=$INSTANCE_TYPE" -var "min_size=$MIN_SIZE" -var "desired_capacity=$DESIRED_CAPACITY" -var "max_size=$MAX_SIZE" -var "image_id=$AMI_ID" -var-file=terraform/attach/terraform-dev.tfvars terraform/attach
deployment:
  production:
    branch: deployment/production
    commands:
      - ./deploy.sh "whale"
  staging:
    branch: master
    commands:
      - ./deploy.sh "whale-dev"
  develop:
    branch: develop
    commands:
      - ./deploy.sh "whale-dev"
